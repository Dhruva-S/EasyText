"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getVersionString = void 0;
const os = require("os");
const path = require("path");
const child_process_1 = require("child_process");
// A modification of https://github.com/electron/node-rcedit to support the retrieval
// of information.
function getVersionString(executablePath, versionString) {
    var _a;
    let rcedit = path.resolve(__dirname, '..', '..', '..', 'node_modules', 'rcedit', 'bin', process.arch === 'x64' ? 'rcedit-x64.exe' : 'rcedit.exe');
    const args = [executablePath, `--get-version-string`, versionString];
    const spawnOptions = {
        env: { ...process.env },
    };
    // Use Wine on non-Windows platforms except for WSL, which doesn't need it
    if (process.platform !== 'win32' && !os.release().endsWith('Microsoft')) {
        args.unshift(rcedit);
        rcedit = process.arch === 'x64' ? 'wine64' : 'wine';
        // Suppress "fixme:" stderr log messages
        spawnOptions.env.WINEDEBUG = '-all';
    }
    try {
        const child = child_process_1.spawnSync(rcedit, args, spawnOptions);
        const result = (_a = child.output) === null || _a === void 0 ? void 0 : _a.toString().split(',wine: ')[0];
        return result.startsWith(',') ? result.substr(1) : result;
    }
    catch {
        return undefined;
    }
}
exports.getVersionString = getVersionString;
//# sourceMappingURL=rceditGet.js.map